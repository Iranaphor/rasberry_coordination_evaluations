---
session: server_virtual
init_cmd: |
  #exec /bin/bash
  cd @TMULE_CONFIG_DIR@ || true
  set -o pipefail

  # get and source the details for the workspace from rasberryrc
  source $WS_DIR/src/runcom.sh
  #source $(rospack find rasberry_core)/new_tmule/tmule_config/init_cmd_tools.sh
  #source $(rospack find rasberry_core)/new_tmule/tmule_config/init_cmd_setup.sh
  export ROS_DOMAIN_ID=1
  # Source the environment variables for the scenario
  #source_module rasberry_coordination_core tmule-server-simulated.sh
  clear -x
  #uri_server

windows:
#- name: mqtt_field_system
#  panes:
#  - ros2 launch farm_networking mqtt_field_broker.launch port:=$MQTT_FIELD_PORT
#  - ros2 launch farm_networking mqtt_field_server.launch port:=$MQTT_FIELD_PORT ip:=$MQTT_FIELD_IP client_id:=field

#- name: mqtt_farm_server
#  panes:
#  - ros2 launch farm_networking mqtt_farm_client.launch ip:=$MQTT_FARM_IP port:=$MQTT_FARM_PORT client_id:=$FIELD_NAME

- name: environment
  panes:
  - ros2 launch environment_common environment.launch.py
#  - ros2 launch rasberry_navigation map_server.launch map:="$METRIC_MAP" use_no_go:=true no_go_map:="$NOGO_MAP"

- name: coordinator
  panes:
  - ros2 run rasberry_coordination_core coordinator.py $COORDINATOR_CONFIG

- name: rviz
  panes:
  - rviz2 -d $RVIZ_CONFIG
  - ros2 run rasberry_coordination_core agent_markers.py

#- name: scheduler
#  panes:
#  - ros2 run rasberry_scheduling task_processor.py
#  - ros2 run rasberry_scheduling server_processor.py
